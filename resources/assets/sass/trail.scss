/**
 * Trail
 */
//<div class="container">
//<a href="" class="trail trail--top trail--animation">TOP</a> <br><br>
//<a href="" class="trail trail--right trail--animation">RIGHT</a> <br><br>
//<a href="" class="trail trail--left trail--animation">LEFT</a> <br><br>
//<a href="" class="trail trail--left trail--animation-hover">LEFT on hover</a> <br><br>
//<a href="" class="trail trail--bottom trail--animation">BOTTOM</a>
//</div>

.trail {
    position: relative;

    &::after {
        content: '';
        position: absolute;
        background: currentColor;
        pointer-events: none;
    }
}

/* Trail mixin */
@mixin trail($direction, $lenght) {
    &::after {
        $opposite-direction: null;
        $scale-axis: null;

        @if $direction == top {
            $opposite-direction: bottom;
        } @else if $direction == right {
            $opposite-direction: left;
        } @else if $direction == bottom {
            $opposite-direction: top;
        } @else if $direction == left {
            $opposite-direction: right;
        }

        @if $direction == left or $direction == right {
            $scale-axis: X;
        } @else if $direction == top or $direction == bottom {
            $scale-axis: Y;
        }

        #{$opposite-direction}: 100%;
        margin-#{$opposite-direction}: 1em;

        @if $direction == left or $direction == right {
            height: 1px;
            width: $lenght;
            top: 50%;
        } @else if $direction == top or $direction == bottom {
            height: $lenght;
            width: 1px;
            left: 50%;
        }

        @keyframes trail-animation-#{$direction} {
            0% {
                transform-origin: $direction;
                transform: scale#{$scale-axis + '(1)'};
            }
            50% {
                transform-origin: $direction;
                transform: scale#{$scale-axis + '(0)'};
            }
            50.01% {
                transform-origin: $opposite-direction;
            }
            100% {
                transform-origin: $opposite-direction;
                transform: scale#{$scale-axis + '(1)'};
            }
        }
    }
}

/* Trail animation mixin */
@mixin trail-animation($direction) {
    &::after {
        animation: trail-animation-#{$direction} 1s infinite;
    }
}

/* Trail generation */
/** Top **/
.trail--top {
    @include trail(top, 6em);

    /*** Animation ***/
    &.trail--animation {
        @include trail-animation(top);
    }

    /*** Hover animation ***/
    &.trail--animation-hover:hover {
        @include trail-animation(top);
    }
}

/** Right **/
.trail--right {
    @include trail(right, 6em);

    /*** Animation ***/
    &.trail--animation {
        @include trail-animation(right);
    }

    /*** Hover animation ***/
    &.trail--animation-hover:hover {
        @include trail-animation(right);
    }
}

/** Bottom **/
.trail--bottom {
    @include trail(bottom, 6em);

    /*** Animation ***/
    &.trail--animation {
        @include trail-animation(bottom);
    }

    /*** Hover animation ***/
    &.trail--animation-hover:hover {
        @include trail-animation(bottom);
    }
}

/** Left **/
.trail--left {
    @include trail(left, 6em);

    /*** Animation ***/
    &.trail--animation {
        @include trail-animation(left);
    }

    /*** Hover animation ***/
    &.trail--animation-hover:hover {
        @include trail-animation(left);
    }
}

/* General page styling */
html {
    font-family: sans-serif;
    font-size: 14px;
    line-height: 1.5;
}

html,
body {
    height: 100%;
}

body {
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

a {
    color: #444;
    text-decoration: none;
}
